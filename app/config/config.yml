imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
ivory_ck_editor:
    configs:
        config_article_simple:
            toolbar: standard
framework:
    #esi:             ~
    translator:      ~
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar
        less:
            node: /usr/bin/node
            node_paths: [/usr/lib/node_modules]
            apply_to: "\.less$"
        cssrewrite: ~
        
        
braincrafted_bootstrap:
    less_filter: less
    customize:
        variables_file: %kernel.root_dir%/Resources/BraincraftedBootstrapBundle/less/variables.less

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        mapping_types:
             enum: string
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: %kernel.root_dir%/data/data.db3
        # path:     %database_path%
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true
        mappings:
            # ...
#            SonataNotificationBundle: ~
#            ApplicationSonataNotificationBundle: ~
#            ApplicationSonataPageBundle: ~ # only once the ApplicationSonataPageBundle is generated
#            SonataPageBundle: ~

#doctrine_phpcr:
#    session:
#        backend:
#            type: doctrinedbal
#            # requires DoctrineCacheBundle
#            # caches:
#            #     meta: doctrine_cache.providers.phpcr_meta
#            #     nodes: doctrine_cache.providers.phpcr_nodes
#            # enable logging
#            logging: true
#            # enable profiling in the debug toolbar.
#            profiling: true
#        workspace: default
#        username: admin
#        password: admin
#
#    odm:
#        auto_mapping: true
#        auto_generate_proxy_classes: "%kernel.debug%"




# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }

# KnpMenu Configuration
knp_menu:
    twig:  # use "twig: false" to disable the Twig extension and the TwigRenderer
        template: knp-menu-custom.html.twig
    templating: false # if true, enables the helper for PHP templates
    default_renderer: twig # The renderer to use, list is also available by default

# FOSUser Configuration
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: ECM\Bundle\UserBundle\Entity\User
    registration:
        confirmation:
            enabled:    true
        form:
            type: ecm_user_registration

# Sonata Configuration
sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
            

sonata_admin:
    title: ECM
    options:
        title_mode: single_image
    title_logo: bundles/ecmhome/images/logo-ecmchess.png
    templates:
        user_block:           SonataAdminBundle:Core:user_block.html.twig
        add_block:            SonataAdminBundle:Core:add_block.html.twig
        layout:               ECMAdminBundle::layout.html.twig
        ajax:                 SonataAdminBundle::ajax_layout.html.twig
        dashboard:            SonataAdminBundle:Core:dashboard.html.twig
        search:               SonataAdminBundle:Core:search.html.twig
        list:                 SonataAdminBundle:CRUD:list.html.twig
        filter:               SonataAdminBundle:Form:filter_admin_fields.html.twig
        show:                 SonataAdminBundle:CRUD:show.html.twig
        show_compare:         SonataAdminBundle:CRUD:show_compare.html.twig
        edit:                 SonataAdminBundle:CRUD:edit.html.twig
        preview:              SonataAdminBundle:CRUD:preview.html.twig
        history:              SonataAdminBundle:CRUD:history.html.twig
        acl:                  SonataAdminBundle:CRUD:acl.html.twig
        history_revision_timestamp:  SonataAdminBundle:CRUD:history_revision_timestamp.html.twig
        action:               SonataAdminBundle:CRUD:action.html.twig
        select:               SonataAdminBundle:CRUD:list__select.html.twig
        list_block:           SonataAdminBundle:Block:block_admin_list.html.twig
        search_result_block:  SonataAdminBundle:Block:block_search_result.html.twig
        short_object_description:  SonataAdminBundle:Helper:short-object-description.html.twig
        delete:               SonataAdminBundle:CRUD:delete.html.twig
        batch:                SonataAdminBundle:CRUD:list__batch.html.twig
        batch_confirmation:   SonataAdminBundle:CRUD:batch_confirmation.html.twig
        inner_list_row:       SonataAdminBundle:CRUD:list_inner_row.html.twig
        base_list_field:      SonataAdminBundle:CRUD:base_list_field.html.twig
        pager_links:          SonataAdminBundle:Pager:links.html.twig
        pager_results:        SonataAdminBundle:Pager:results.html.twig
        tab_menu_template:    SonataAdminBundle:Core:tab_menu_template.html.twig
    dashboard:
            blocks:
                -
                    position: left
                    type: sonata.admin.block.admin_list
#                -
#                    position: right
#                    type: sonata.block.service.text
#                    settings:
#                        content: >
#                            <h2>Welcome to the Sonata Admin</h2>
#                            <p>This is a <code>sonata.block.service.text</code> from the Block
#                            Bundle, you can create and add new block in these area by configuring
#                            the <code>sonata_admin</code> section.</p> <br /> For instance, here
#                            a RSS feed parser (<code>sonata.block.service.rss</code>):
#                -
#                    position: right
#                    type: sonata.block.service.rss
#                    settings:
#                        title: Sonata Project's Feeds
#                        url: http://sonata-project.org/blog/archive.rss

#    assets:
#        javascripts:
#            - bundles/sonataadmin/vendor/jquery/dist/jquery.min.js
#            - bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.js
#            - bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js
#            - bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js
#
#        stylesheets:
#            - bundles/sonataadmin/vendor/AdminLTE/css/font-awesome.min.css
#            - bundles/sonataadmin/vendor/jqueryui/themes/flick/jquery-ui.min.css

#Sonata formatter Configuration (formateur de textarea)
sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig #keep this commented unless you are using media bundle.


        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions


#Stof
stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            tree: true
            sortable: true



#
## Sonata SEO Configuration
#sonata_seo:
#    default:          sonata.seo.page.default
#    encoding:         UTF-8
#    page:
#        title:            Sonata Project
#        metas:
#            name:
#                keywords:             foo bar
#                description:          The description
#                robots:               index, follow
#
#            property:
#                # Facebook application settings
#                #'fb:app_id':          XXXXXX
#                #'fb:admins':          admin1, admin2
#
#                # Open Graph information
#                # see http://developers.facebook.com/docs/opengraphprotocol/#types or http://ogp.me/
#                'og:site_name':       Sonata Project Sandbox
#                'og:description':     A demo of the some rich bundles for your Symfony2 projects
#
#            http-equiv:
#                'Content-Type':         text/html; charset=utf-8
#                #'X-Ua-Compatible':      IE=EmulateIE7
#
#            charset:
#                UTF-8:    ''
#
#        head:
#            'xmlns':              http://www.w3.org/1999/xhtml
#            'xmlns:og':           http://opengraphprotocol.org/schema/
#            #'xmlns:fb':           "http://www.facebook.com/2008/fbml"
#
## Sonata notifications
#sonata_notification:
#    backend: sonata.notification.backend.runtime
#
#cmf_routing:
#    chain:
#        routers_by_id:
#            # enable the DynamicRouter with high priority to allow overwriting configured routes with content
#            #cmf_routing.dynamic_router: 200
#            # enable the symfony default router with a lower priority
#            sonata.page.router: 150
#            router.default: 100
#
#sonata_page:
#    multisite: host
#    use_streamed_response: true # set the value to false in debug mode or if the reverse proxy does not handle streamed response
#    ignore_route_patterns:
#        - ^(.*)admin(.*)   # ignore admin route, ie route containing 'admin'
#        - ^_(.*)          # ignore symfony routes
#
#    ignore_routes:
#        - sonata_page_cache_esi
#        - sonata_page_cache_ssi
#        - sonata_page_js_sync_cache
#        - sonata_page_js_async_cache
#        - sonata_cache_esi
#        - sonata_cache_ssi
#        - sonata_cache_js_async
#        - sonata_cache_js_sync
#        - sonata_cache_apc
#
#    ignore_uri_patterns:
#        - ^/admin\/   # ignore admin route, ie route containing 'admin'
#
#    page_defaults:
#        homepage: {decorate: false} # disable decoration for homepage, key - is a page route
#
#    default_template: default # template key from templates section, used as default for pages
#    templates:
#        default:  { path: 'SonataPageBundle::layout.html.twig',          name: 'default' }
#        2columns: { path: 'SonataPageBundle::2columns_layout.html.twig', name: '2 columns layout' }
#
#    # manage the http errors
#    catch_exceptions:
#        not_found: [404]    # render 404 page with "not_found" key (name generated: _page_internal_error_{key})
#        fatal:     [500]    # so you can use the same page for different http errors or specify specific page for each error
#
